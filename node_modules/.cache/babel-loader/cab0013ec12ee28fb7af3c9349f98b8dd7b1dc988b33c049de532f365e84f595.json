{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u0434\\u0430\\u0440\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\work\\\\GazProm\\\\client\\\\src\\\\components\\\\chimform.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:3001/chims\";\nclass ChimForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chim = {};\n    this.state = {\n      temp: 0,\n      methane: 0,\n      ethane: 0,\n      propane: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: el => this.myForm = el,\n      target: \"_self\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"\\u0425\\u0438\\u043C\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0435 \\u0432\\u0435\\u0449\\u0435\\u0441\\u0442\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430 K\",\n        onChange: e => this.setState({\n          temp: e.target.value\n        }),\n        required: true,\n        type: \"number\",\n        min: \"298\",\n        max: \"1000\",\n        step: \"any\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"\\u0421\\u043E\\u0441\\u0442\\u0430\\u0432 \\u0432 \\u043F\\u0440\\u043E\\u0446\\u0435\\u043D\\u0442\\u0430\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041C\\u0435\\u0442\\u0430\\u043D\",\n        onChange: e => this.setState({\n          methane: e.target.value\n        }),\n        type: \"number\",\n        min: \"0\",\n        max: \"100\",\n        step: \"any\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u042D\\u0442\\u0430\\u043D\",\n        onChange: e => this.setState({\n          ethane: e.target.value\n        }),\n        type: \"number\",\n        min: \"0\",\n        max: \"100\",\n        step: \"any\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041F\\u0440\\u043E\\u043F\\u0430\\u043D\",\n        onChange: e => this.setState({\n          propane: e.target.value\n        }),\n        type: \"number\",\n        min: \"0\",\n        max: \"100\",\n        step: \"any\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"button1\",\n        type: \"button\",\n        onClick: () => {\n          this.chim = {\n            temp: this.state.temp,\n            methane: this.state.methane,\n            ethane: this.state.ethane,\n            propane: this.state.propane\n          };\n          let a = Number(this.chim.methane) + Number(this.chim.ethane) + Number(this.chim.propane);\n          let b = Number(this.chim.temp);\n          if (a > 100 || a < 100 || b > 1000 || b < 273) {\n            function toggleText(button_id) {\n              var text = document.getElementById(button_id).firstChild;\n              text.data = \"Проверьте данные!\";\n            }\n            toggleText(\"button1\");\n          } else {\n            //this.props.sChim(this.chim)\n            //this.myForm.reset()\n            axios.post(baseUrl, {\n              \"tempr\": this.chim.temp,\n              \"methane\": this.chim.methane,\n              \"ethane\": this.chim.ethane,\n              \"propane\": this.chim.propane\n            }).then(res => {\n              function toggleText(button_id) {\n                var text = document.getElementById(button_id).firstChild;\n                text.data = res.data + \" Дж\";\n              }\n              console.log(res.data);\n              toggleText(\"button1\");\n            });\n          }\n        },\n        children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ChimForm;","map":{"version":3,"names":["axios","React","jsxDEV","_jsxDEV","baseUrl","ChimForm","Component","constructor","props","chim","state","temp","methane","ethane","propane","render","ref","el","myForm","target","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","setState","value","required","type","min","max","step","id","onClick","a","Number","b","toggleText","button_id","text","document","getElementById","firstChild","data","post","then","res","console","log"],"sources":["C:/Users/Ильдар/OneDrive/Документы/work/GazProm/client/src/components/chimform.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst baseUrl = \"http://localhost:3001/chims\";\r\n\r\nclass ChimForm extends React.Component{\r\n    chim ={}\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            temp: 0,\r\n            methane : 0,\r\n            ethane: 0,\r\n            propane: 0\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form ref={(el) => this.myForm = el} target=\"_self\">\r\n                <legend>Химические вещества</legend>\r\n                <input placeholder=\"Температура K\" onChange={(e)=> this.setState({temp:e.target.value})} required type=\"number\" min=\"298\" max=\"1000\" step=\"any\"/>\r\n                <legend>Состав в процентах</legend>\r\n                <input placeholder=\"Метан\" onChange={(e)=> this.setState({methane:e.target.value})} type=\"number\" min=\"0\" max=\"100\" step=\"any\"/>\r\n                <input placeholder=\"Этан\" onChange={(e)=> this.setState({ethane:e.target.value})} type=\"number\" min=\"0\" max=\"100\" step=\"any\"/>\r\n                <input placeholder=\"Пропан\" onChange={(e)=> this.setState({propane:e.target.value})} type=\"number\" min=\"0\" max=\"100\" step=\"any\"/>\r\n                <button id=\"button1\" type='button'  onClick={() =>{\r\n\r\n                    this.chim ={\r\n                        temp: this.state.temp,\r\n                        methane : this.state.methane,\r\n                        ethane: this.state.ethane,\r\n                        propane: this.state.propane\r\n                    }\r\n                    let a = Number(this.chim.methane) + Number(this.chim.ethane) + Number(this.chim.propane)\r\n                    let b = Number(this.chim.temp)\r\n                    \r\n                    if((a > 100 || a < 100) || (b > 1000 || b < 273)){\r\n                        function toggleText(button_id)  {\r\n                            var text = document.getElementById(button_id).firstChild;\r\n                            text.data = \"Проверьте данные!\"\r\n                         }\r\n                         toggleText(\"button1\")\r\n\r\n                    }\r\n                    \r\n                    else {\r\n                        //this.props.sChim(this.chim)\r\n                        //this.myForm.reset()\r\n                        axios.post(baseUrl,\r\n                            {\r\n                            \"tempr\": this.chim.temp,\r\n                            \"methane\": this.chim.methane,\r\n                            \"ethane\": this.chim.ethane,\r\n                            \"propane\": this.chim.propane\r\n                        }, ).then((res)=> {\r\n                            function toggleText(button_id)  {\r\n                                var text = document.getElementById(button_id).firstChild;\r\n                                text.data = res.data + \" Дж\"\r\n                             }\r\n                            console.log(res.data)\r\n\r\n                            toggleText(\"button1\")})\r\n\r\n                    }\r\n                }\r\n                }>Результат?</button>\r\n            </form>\r\n        )}\r\n\r\n}\r\n\r\nexport default ChimForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}